@Configuration
@EnableTransactionManagement
@EnableJpaRepositories(
		basePackages = {"cwp.services.adhoc_processor.repository.acs" }, 
		entityManagerFactoryRef = "acsEntityManagerFactory", 
		transactionManagerRef = "acsTransactionManager")

public class AcsDatasourceConfiguration {

	@Autowired
	private AcsDbProperties properties;

	@Validated
	@Component
	@ConfigurationProperties(prefix = "acs.read.datasource")
	public class AcsDbProperties extends HikariDBProperties {
	}

	@ConditionalOnBean(value = AcsDbProperties.class)
	@Bean(name = "acsDataSource", destroyMethod = "")
	public DataSource acsDataSource() {
		return new HikariDataSource(new HikariConfig(properties.getProperties()));
	}
	
	@Bean("acsJdbcTemplate")
	public JdbcTemplate pmtTemplate () throws Exception {
		return new JdbcTemplate(acsDataSource());
	}

	@Bean(name = "acsEntityManagerFactory")
	public LocalContainerEntityManagerFactoryBean acsEntityManagerFactory(EntityManagerFactoryBuilder builder) {
		return builder.dataSource(acsDataSource())
				.packages("cwp.services.adhoc_processor.domain.acs" )
				.persistenceUnit("acs")
				.build();
	}

	/*
	 * Leaky requirement for the unsatisfied transaction manager bean stemming from nxn-workflow-services#NWFProcessEngineConfiguration.java dependency.
	 * 
	 * N.B. MUST BE CALLED THIS EXACT NAME, else will get 
	 * org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.transaction.PlatformTransactionManager' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=transactionManager)}
	 * 
	 */
	@Bean("transactionManager") // <-- must be called `transactionManager`.
	public PlatformTransactionManager acsTransactionManager
			(
			@Qualifier("acsEntityManagerFactory")
			final  LocalContainerEntityManagerFactoryBean acsEntityManagerFactory
			) {
		
				return new JpaTransactionManager(acsEntityManagerFactory.getObject());
	}
	

}
